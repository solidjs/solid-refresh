// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`esm (client, hydratable) > Context API > should not support VariableDeclaration that is not top-level 1`] = `
"import { createContext } from 'solid-js';
if (someCond) {
  const Example = createContext();
}"
`;

exports[`esm (client, hydratable) > Context API > should support ExportNamedDeclaration 1`] = `
"import { $$context as _$$context } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
import { createContext } from 'solid-js';
const _REGISTRY = _$$registry();
export const Example = _$$context(_REGISTRY, "Example", createContext());
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > Context API > should support top-level VariableDeclaration 1`] = `
"import { $$context as _$$context } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
import { createContext } from 'solid-js';
const _REGISTRY = _$$registry();
const Example = _$$context(_REGISTRY, "Example", createContext());
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > ExportDefaultDeclaration w/ FunctionExpression > should skip ExportDefaultDeclaration w/ FunctionExpression with @refresh reload 1`] = `
"import { template as _$template } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$decline as _$$decline } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
// @refresh reload
export default function Foo() {
  return _$getNextElement(_tmpl$);
}
if (import.meta.hot) {
  _$$decline("esm", import.meta.hot);
}"
`;

exports[`esm (client, hydratable) > ExportDefaultDeclaration w/ FunctionExpression > should skip ExportDefaultDeclaration w/ FunctionExpression with @refresh skip 1`] = `
"import { template as _$template } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
// @refresh skip
export default function Foo() {
  return _$getNextElement(_tmpl$);
}"
`;

exports[`esm (client, hydratable) > ExportDefaultDeclaration w/ FunctionExpression > should skip ExportDefaultDeclaration w/ FunctionExpression with invalid Component name 1`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const JSX_foo_1 = _$$component(_REGISTRY, "JSX_foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
export default function foo() {
  return /*@refresh jsx-skip*/_$createComponent(JSX_foo_1, {});
}
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > ExportDefaultDeclaration w/ FunctionExpression > should skip ExportDefaultDeclaration w/ FunctionExpression with valid Component name and >1 params 1`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
export default function Foo(a, b) {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {});
}
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > ExportDefaultDeclaration w/ FunctionExpression > should transform ExportDefaultDeclaration w/ FunctionExpression with valid Component name and params 1`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
const Foo = _$$component(_REGISTRY, "Foo", function Foo(props) {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {});
}, {
  location: "example.jsx:2:21",
  signature: "1f7be6ec"
});
export default Foo;
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > ExportDefaultDeclaration w/ FunctionExpression > should transform ExportDefaultDeclaration w/ FunctionExpression with valid Component name and params 2`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
const Foo = _$$component(_REGISTRY, "Foo", function Foo() {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {});
}, {
  location: "example.jsx:2:21",
  signature: "c963b907"
});
export default Foo;
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > ExportDefaultDeclaration w/ FunctionExpression > should transform ExportDefaultDeclaration w/ FunctionExpression with valid Component name and params 3`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { insert as _$insert } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/(() => {
  var _el$ = _$getNextElement(_tmpl$);
  _$insert(_el$, () => _props.v0);
  return _el$;
})(), {
  signature: "ae0f2a31"
});
const Foo = _$$component(_REGISTRY, "Foo", function Foo() {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {
    v0: example
  });
}, {
  location: "example.jsx:3:21",
  signature: "27e4cbbb",
  dependencies: () => ({
    example
  })
});
const example = 'Foo';
export default Foo;
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > ExportDefaultDeclaration w/ FunctionExpression > should transform ExportDefaultDeclaration w/ FunctionExpression with valid Component name and params 4`] = `
"import { createComponent as _$createComponent } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$createComponent(_props.v0, {
  children: "Foo"
}), {
  signature: "23a9c5eb"
});
const Foo = _$$component(_REGISTRY, "Foo", function Foo() {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {
    get v0() {
      return Example.Provider;
    }
  });
}, {
  location: "example.jsx:3:21",
  signature: "b4605599",
  dependencies: () => ({
    Example
  })
});
const Example = createContext();
export default Foo;
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > ExportDefaultDeclaration w/ FunctionExpression > should transform ExportDefaultDeclaration w/ FunctionExpression with valid Component name and params 5`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<div>foo\`),
  _tmpl$2 = /*#__PURE__*/_$template(\`<div>bar\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/[_$getNextElement(_tmpl$), _$createComponent(_props.v0, {})], {
  signature: "1eacc68"
});
const Foo = _$$component(_REGISTRY, "Foo", function Foo() {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {
    v0: Bar
  });
}, {
  location: "example.jsx:5:21",
  signature: "2f861eed",
  dependencies: () => ({
    Bar
  })
});
const Bar_1 = _$$component(_REGISTRY, "Bar_1", _props2 => /*@refresh jsx-skip*/_$getNextElement(_tmpl$2), {
  signature: "fad4daa8"
});
const Bar = _$$component(_REGISTRY, "Bar", function Bar() {
  return /*@refresh jsx-skip*/_$createComponent(Bar_1, {});
}, {
  location: "example.jsx:2:6",
  signature: "e93ca257"
});
export default Foo;
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > ExportNamedDeclaration w/ FunctionExpression > should skip ExportNamedDeclaration w/ FunctionExpression with @refresh reload 1`] = `
"import { template as _$template } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$decline as _$$decline } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
// @refresh reload
export function Foo() {
  return _$getNextElement(_tmpl$);
}
if (import.meta.hot) {
  _$$decline("esm", import.meta.hot);
}"
`;

exports[`esm (client, hydratable) > ExportNamedDeclaration w/ FunctionExpression > should skip ExportNamedDeclaration w/ FunctionExpression with @refresh skip 1`] = `
"import { template as _$template } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
// @refresh skip
export function Foo() {
  return _$getNextElement(_tmpl$);
}"
`;

exports[`esm (client, hydratable) > ExportNamedDeclaration w/ FunctionExpression > should skip ExportNamedDeclaration w/ FunctionExpression with invalid Component name 1`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
export const Foo = _$$component(_REGISTRY, "Foo", function Foo() {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {});
}, {
  location: "example.jsx:2:13",
  signature: "c963b907"
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > ExportNamedDeclaration w/ FunctionExpression > should skip ExportNamedDeclaration w/ FunctionExpression with valid Component name and >1 params 1`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
export function Foo(a, b) {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {});
}
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > ExportNamedDeclaration w/ FunctionExpression > should transform ExportNamedDeclaration w/ FunctionExpression with valid Component name and params 1`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
export const Foo = _$$component(_REGISTRY, "Foo", function Foo(props) {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {});
}, {
  location: "example.jsx:2:13",
  signature: "1f7be6ec"
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > ExportNamedDeclaration w/ FunctionExpression > should transform ExportNamedDeclaration w/ FunctionExpression with valid Component name and params 2`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
export const Foo = _$$component(_REGISTRY, "Foo", function Foo() {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {});
}, {
  location: "example.jsx:2:13",
  signature: "c963b907"
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > ExportNamedDeclaration w/ FunctionExpression > should transform ExportNamedDeclaration w/ FunctionExpression with valid Component name and params 3`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { insert as _$insert } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>\`);
const example = 'Foo';
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/(() => {
  var _el$ = _$getNextElement(_tmpl$);
  _$insert(_el$, () => _props.v0);
  return _el$;
})(), {
  signature: "ae0f2a31"
});
export const Foo = _$$component(_REGISTRY, "Foo", function Foo() {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {
    v0: example
  });
}, {
  location: "example.jsx:3:13",
  signature: "27e4cbbb",
  dependencies: () => ({
    example
  })
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > ExportNamedDeclaration w/ FunctionExpression > should transform ExportNamedDeclaration w/ FunctionExpression with valid Component name and params 4`] = `
"import { createComponent as _$createComponent } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
const Example = createContext();
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$createComponent(_props.v0, {
  children: "Foo"
}), {
  signature: "23a9c5eb"
});
export const Foo = _$$component(_REGISTRY, "Foo", function Foo() {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {
    get v0() {
      return Example.Provider;
    }
  });
}, {
  location: "example.jsx:3:13",
  signature: "b4605599",
  dependencies: () => ({
    Example
  })
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > ExportNamedDeclaration w/ FunctionExpression > should transform ExportNamedDeclaration w/ FunctionExpression with valid Component name and params 5`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<div>bar\`),
  _tmpl$2 = /*#__PURE__*/_$template(\`<div>foo\`);
const _REGISTRY = _$$registry();
const Bar_1 = _$$component(_REGISTRY, "Bar_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "61dd3182"
});
export const Bar = _$$component(_REGISTRY, "Bar", function Bar() {
  return /*@refresh jsx-skip*/_$createComponent(Bar_1, {});
}, {
  location: "example.jsx:2:13",
  signature: "e93ca257"
});
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props2 => /*@refresh jsx-skip*/[_$getNextElement(_tmpl$2), _$createComponent(_props2.v0, {})], {
  signature: "1f1efec9"
});
export const Foo = _$$component(_REGISTRY, "Foo", function Foo() {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {
    v0: Bar
  });
}, {
  location: "example.jsx:5:13",
  signature: "2f861eed",
  dependencies: () => ({
    Bar
  })
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > FunctionDeclaration > should skip FunctionDeclaration with @refresh reload 1`] = `
"import { template as _$template } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$decline as _$$decline } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
// @refresh reload
function Foo() {
  return _$getNextElement(_tmpl$);
}
if (import.meta.hot) {
  _$$decline("esm", import.meta.hot);
}"
`;

exports[`esm (client, hydratable) > FunctionDeclaration > should skip FunctionDeclaration with @refresh skip 1`] = `
"import { template as _$template } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
// @refresh skip
function Foo() {
  return _$getNextElement(_tmpl$);
}"
`;

exports[`esm (client, hydratable) > FunctionDeclaration > should skip FunctionDeclaration with invalid Component name 1`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const JSX_foo_1 = _$$component(_REGISTRY, "JSX_foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
function foo() {
  return /*@refresh jsx-skip*/_$createComponent(JSX_foo_1, {});
}
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > FunctionDeclaration > should skip FunctionDeclaration with valid Component name and >1 params 1`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
function Foo(a, b) {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {});
}
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > FunctionDeclaration > should transform FunctionDeclaration with valid Component name and params 1`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
const Foo = _$$component(_REGISTRY, "Foo", function Foo(props) {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {});
}, {
  location: "example.jsx:2:6",
  signature: "1f7be6ec"
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > FunctionDeclaration > should transform FunctionDeclaration with valid Component name and params 2`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
const Foo = _$$component(_REGISTRY, "Foo", function Foo() {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {});
}, {
  location: "example.jsx:2:6",
  signature: "c963b907"
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > FunctionDeclaration > should transform FunctionDeclaration with valid Component name and params 3`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { insert as _$insert } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>\`);
const example = 'Foo';
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/(() => {
  var _el$ = _$getNextElement(_tmpl$);
  _$insert(_el$, () => _props.v0);
  return _el$;
})(), {
  signature: "ae0f2a31"
});
const Foo = _$$component(_REGISTRY, "Foo", function Foo() {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {
    v0: example
  });
}, {
  location: "example.jsx:3:6",
  signature: "27e4cbbb",
  dependencies: () => ({
    example
  })
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > FunctionDeclaration > should transform FunctionDeclaration with valid Component name and params 4`] = `
"import { createComponent as _$createComponent } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
const Example = createContext();
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$createComponent(_props.v0, {
  children: "Foo"
}), {
  signature: "23a9c5eb"
});
const Foo = _$$component(_REGISTRY, "Foo", function Foo() {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {
    get v0() {
      return Example.Provider;
    }
  });
}, {
  location: "example.jsx:3:6",
  signature: "b4605599",
  dependencies: () => ({
    Example
  })
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > FunctionDeclaration > should transform FunctionDeclaration with valid Component name and params 5`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<div>bar\`),
  _tmpl$2 = /*#__PURE__*/_$template(\`<div>foo\`);
const _REGISTRY = _$$registry();
const Bar_1 = _$$component(_REGISTRY, "Bar_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "61dd3182"
});
const Bar = _$$component(_REGISTRY, "Bar", function Bar() {
  return /*@refresh jsx-skip*/_$createComponent(Bar_1, {});
}, {
  location: "example.jsx:2:6",
  signature: "e93ca257"
});
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props2 => /*@refresh jsx-skip*/[_$getNextElement(_tmpl$2), _$createComponent(_props2.v0, {})], {
  signature: "1f1efec9"
});
const Foo = _$$component(_REGISTRY, "Foo", function Foo() {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {
    v0: Bar
  });
}, {
  location: "example.jsx:5:6",
  signature: "2f861eed",
  dependencies: () => ({
    Bar
  })
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > VariableDeclarator > ArrowFunctionExpression > should skip VariableDeclarator w/ ArrowFunctionExpression with @refresh reload 1`] = `
"import { template as _$template } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$decline as _$$decline } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
// @refresh reload
const Foo = () => {
  return _$getNextElement(_tmpl$);
};
if (import.meta.hot) {
  _$$decline("esm", import.meta.hot);
}"
`;

exports[`esm (client, hydratable) > VariableDeclarator > ArrowFunctionExpression > should skip VariableDeclarator w/ ArrowFunctionExpression with @refresh skip 1`] = `
"import { template as _$template } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
// @refresh skip
const Foo = () => {
  return _$getNextElement(_tmpl$);
};"
`;

exports[`esm (client, hydratable) > VariableDeclarator > ArrowFunctionExpression > should skip VariableDeclarator w/ ArrowFunctionExpression with invalid Component name 1`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const JSX_foo_1 = _$$component(_REGISTRY, "JSX_foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
const foo = () => {
  return /*@refresh jsx-skip*/_$createComponent(JSX_foo_1, {});
};
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > VariableDeclarator > ArrowFunctionExpression > should skip VariableDeclarator w/ ArrowFunctionExpression with valid Component name and >1 params 1`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
const Foo = (a, b) => {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {});
};
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > VariableDeclarator > ArrowFunctionExpression > should transform VariableDeclarator w/ ArrowFunctionExpression with valid Component name and params 1`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
const Foo = _$$component(_REGISTRY, "Foo", props => {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {});
}, {
  location: "example.jsx:2:20",
  signature: "afe16871"
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > VariableDeclarator > ArrowFunctionExpression > should transform VariableDeclarator w/ ArrowFunctionExpression with valid Component name and params 2`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
const Foo = _$$component(_REGISTRY, "Foo", () => {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {});
}, {
  location: "example.jsx:2:20",
  signature: "82d7f8e8"
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > VariableDeclarator > ArrowFunctionExpression > should transform VariableDeclarator w/ ArrowFunctionExpression with valid Component name and params 3`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { insert as _$insert } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>\`);
const example = 'Foo';
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/(() => {
  var _el$ = _$getNextElement(_tmpl$);
  _$insert(_el$, () => _props.v0);
  return _el$;
})(), {
  signature: "ae0f2a31"
});
const Foo = _$$component(_REGISTRY, "Foo", () => {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {
    v0: example
  });
}, {
  location: "example.jsx:3:20",
  signature: "40bf5e47",
  dependencies: () => ({
    example
  })
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > VariableDeclarator > ArrowFunctionExpression > should transform VariableDeclarator w/ ArrowFunctionExpression with valid Component name and params 4`] = `
"import { createComponent as _$createComponent } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
const Example = createContext();
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$createComponent(_props.v0, {
  children: "Foo"
}), {
  signature: "23a9c5eb"
});
const Foo = _$$component(_REGISTRY, "Foo", () => {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {
    get v0() {
      return Example.Provider;
    }
  });
}, {
  location: "example.jsx:3:20",
  signature: "7d38e403",
  dependencies: () => ({
    Example
  })
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > VariableDeclarator > ArrowFunctionExpression > should transform VariableDeclarator w/ ArrowFunctionExpression with valid Component name and params 5`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<div>bar\`),
  _tmpl$2 = /*#__PURE__*/_$template(\`<div>foo\`);
const _REGISTRY = _$$registry();
const Bar_1 = _$$component(_REGISTRY, "Bar_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "61dd3182"
});
const Bar = _$$component(_REGISTRY, "Bar", () => {
  return /*@refresh jsx-skip*/_$createComponent(Bar_1, {});
}, {
  location: "example.jsx:2:20",
  signature: "d1c6ca9b"
});
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props2 => /*@refresh jsx-skip*/[_$getNextElement(_tmpl$2), _$createComponent(_props2.v0, {})], {
  signature: "3b124f81"
});
const Foo = _$$component(_REGISTRY, "Foo", () => {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {
    v0: Bar
  });
}, {
  location: "example.jsx:5:20",
  signature: "74574e98",
  dependencies: () => ({
    Bar
  })
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > VariableDeclarator > FunctionExpression > should skip VariableDeclarator w/ FunctionExpression with @refresh reload 1`] = `
"import { template as _$template } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$decline as _$$decline } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
// @refresh reload
const Foo = function () {
  return _$getNextElement(_tmpl$);
};
if (import.meta.hot) {
  _$$decline("esm", import.meta.hot);
}"
`;

exports[`esm (client, hydratable) > VariableDeclarator > FunctionExpression > should skip VariableDeclarator w/ FunctionExpression with @refresh skip 1`] = `
"import { template as _$template } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
// @refresh skip
const Foo = function () {
  return _$getNextElement(_tmpl$);
};"
`;

exports[`esm (client, hydratable) > VariableDeclarator > FunctionExpression > should skip VariableDeclarator w/ FunctionExpression with invalid Component name 1`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const JSX_foo_1 = _$$component(_REGISTRY, "JSX_foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
const foo = function () {
  return /*@refresh jsx-skip*/_$createComponent(JSX_foo_1, {});
};
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > VariableDeclarator > FunctionExpression > should skip VariableDeclarator w/ FunctionExpression with valid Component name and >1 params 1`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
const Foo = function (a, b) {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {});
};
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > VariableDeclarator > FunctionExpression > should transform VariableDeclarator w/ FunctionExpression with valid Component name and params 1`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
const Foo = _$$component(_REGISTRY, "Foo", function (props) {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {});
}, {
  location: "example.jsx:2:20",
  signature: "a6a4d450"
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > VariableDeclarator > FunctionExpression > should transform VariableDeclarator w/ FunctionExpression with valid Component name and params 2`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>Foo\`);
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "4b145a58"
});
const Foo = _$$component(_REGISTRY, "Foo", function () {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {});
}, {
  location: "example.jsx:2:20",
  signature: "a0860447"
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > VariableDeclarator > FunctionExpression > should transform VariableDeclarator w/ FunctionExpression with valid Component name and params 3`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { insert as _$insert } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<h1>\`);
const example = 'Foo';
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/(() => {
  var _el$ = _$getNextElement(_tmpl$);
  _$insert(_el$, () => _props.v0);
  return _el$;
})(), {
  signature: "ae0f2a31"
});
const Foo = _$$component(_REGISTRY, "Foo", function () {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {
    v0: example
  });
}, {
  location: "example.jsx:3:20",
  signature: "dc846265",
  dependencies: () => ({
    example
  })
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > VariableDeclarator > FunctionExpression > should transform VariableDeclarator w/ FunctionExpression with valid Component name and params 4`] = `
"import { createComponent as _$createComponent } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
const Example = createContext();
const _REGISTRY = _$$registry();
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props => /*@refresh jsx-skip*/_$createComponent(_props.v0, {
  children: "Foo"
}), {
  signature: "23a9c5eb"
});
const Foo = _$$component(_REGISTRY, "Foo", function () {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {
    get v0() {
      return Example.Provider;
    }
  });
}, {
  location: "example.jsx:3:20",
  signature: "5dc2d058",
  dependencies: () => ({
    Example
  })
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > VariableDeclarator > FunctionExpression > should transform VariableDeclarator w/ FunctionExpression with valid Component name and params 5`] = `
"import { template as _$template } from "solid-js/web";
import { createComponent as _$createComponent } from "solid-js/web";
import { getNextElement as _$getNextElement } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
var _tmpl$ = /*#__PURE__*/_$template(\`<div>bar\`),
  _tmpl$2 = /*#__PURE__*/_$template(\`<div>foo\`);
const _REGISTRY = _$$registry();
const Bar_1 = _$$component(_REGISTRY, "Bar_1", _props => /*@refresh jsx-skip*/_$getNextElement(_tmpl$), {
  signature: "61dd3182"
});
const Bar = _$$component(_REGISTRY, "Bar", function () {
  return /*@refresh jsx-skip*/_$createComponent(Bar_1, {});
}, {
  location: "example.jsx:2:20",
  signature: "1fb34faa"
});
const Foo_1 = _$$component(_REGISTRY, "Foo_1", _props2 => /*@refresh jsx-skip*/[_$getNextElement(_tmpl$2), _$createComponent(_props2.v0, {})], {
  signature: "3b124f81"
});
const Foo = _$$component(_REGISTRY, "Foo", function () {
  return /*@refresh jsx-skip*/_$createComponent(Foo_1, {
    v0: Bar
  });
}, {
  location: "example.jsx:5:20",
  signature: "ad7301a",
  dependencies: () => ({
    Bar
  })
});
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > fix render > @refresh reload > should work 1`] = `
"import { createComponent as _$createComponent } from "solid-js/web";
import { $$decline as _$$decline } from "solid-refresh";
// @refresh reload
import { render } from 'solid-js/web';
if (root) {
  const _cleanup = render(() => _$createComponent(App, {}), root);
  if (import.meta.hot) import.meta.hot.dispose(_cleanup);
}
if (import.meta.hot) {
  _$$decline("esm", import.meta.hot);
}"
`;

exports[`esm (client, hydratable) > fix render > import specifiers > should work with ImportNamespaceSpecifier 1`] = `
"import { createComponent as _$createComponent } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
import * as solidWeb from 'solid-js/web';
const _REGISTRY = _$$registry();
const JSX__cleanup_1 = _$$component(_REGISTRY, "JSX__cleanup_1", _props => /*@refresh jsx-skip*/_$createComponent(_props.v0, {}), {
  signature: "1fdef89b"
});
const _cleanup = solidWeb.render(() => /*@refresh jsx-skip*/_$createComponent(JSX__cleanup_1, {
  v0: App
}), root);
if (import.meta.hot) import.meta.hot.dispose(_cleanup);
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > fix render > import specifiers > should work with ImportSpecifier + Identifier 1`] = `
"import { createComponent as _$createComponent } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
import { render } from 'solid-js/web';
const _REGISTRY = _$$registry();
const JSX__cleanup_1 = _$$component(_REGISTRY, "JSX__cleanup_1", _props => /*@refresh jsx-skip*/_$createComponent(_props.v0, {}), {
  signature: "1fdef89b"
});
const _cleanup = render(() => /*@refresh jsx-skip*/_$createComponent(JSX__cleanup_1, {
  v0: App
}), root);
if (import.meta.hot) import.meta.hot.dispose(_cleanup);
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > fix render > import specifiers > should work with ImportSpecifier + aliased Identifier 1`] = `
"import { createComponent as _$createComponent } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
import { render as Render } from 'solid-js/web';
const _REGISTRY = _$$registry();
const JSX__cleanup_1 = _$$component(_REGISTRY, "JSX__cleanup_1", _props => /*@refresh jsx-skip*/_$createComponent(_props.v0, {}), {
  signature: "1fdef89b"
});
const _cleanup = Render(() => /*@refresh jsx-skip*/_$createComponent(JSX__cleanup_1, {
  v0: App
}), root);
if (import.meta.hot) import.meta.hot.dispose(_cleanup);
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > fix render > import specifiers > should work with ImportSpecifier + aliased Identifier from StringLiteral 1`] = `
"import { createComponent as _$createComponent } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
import { 'render' as Render } from 'solid-js/web';
const _REGISTRY = _$$registry();
const JSX__cleanup_1 = _$$component(_REGISTRY, "JSX__cleanup_1", _props => /*@refresh jsx-skip*/_$createComponent(_props.v0, {}), {
  signature: "1fdef89b"
});
const _cleanup = Render(() => /*@refresh jsx-skip*/_$createComponent(JSX__cleanup_1, {
  v0: App
}), root);
if (import.meta.hot) import.meta.hot.dispose(_cleanup);
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;

exports[`esm (client, hydratable) > fix render > top-level statements > should work with IfStatement 1`] = `
"import { createComponent as _$createComponent } from "solid-js/web";
import { $$component as _$$component } from "solid-refresh";
import { $$refresh as _$$refresh } from "solid-refresh";
import { $$registry as _$$registry } from "solid-refresh";
import { render } from 'solid-js/web';
const _REGISTRY = _$$registry();
const JSX__cleanup_1 = _$$component(_REGISTRY, "JSX__cleanup_1", _props => /*@refresh jsx-skip*/_$createComponent(_props.v0, {}), {
  signature: "1fdef89b"
});
if (root) {
  const _cleanup = render(() => /*@refresh jsx-skip*/_$createComponent(JSX__cleanup_1, {
    v0: App
  }), root);
  if (import.meta.hot) import.meta.hot.dispose(_cleanup);
}
if (import.meta.hot) {
  _$$refresh("esm", import.meta.hot, _REGISTRY);
}"
`;
